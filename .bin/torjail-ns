#!/bin/bash

# To run command execute: ip netns exec $COMMAND

if ! [[ $1 =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]
then
  echo "Usage: $0 subnet"
  exit 1
fi

SUBNET="$1"

# Create a new network namespace named torjail
ip netns add torjail

# Create two virtual ethernet  interface
ip link add out-torjail type veth peer name in-torjail

# Bind one interface to torjail network namespace
ip link set in-torjail netns torjail

# Set interfaces ip and default routing
ip addr add "$SUBNET".1/24 dev out-torjail
ip link set out-torjail up
ip netns exec torjail ip addr add "$SUBNET".2/24 dev in-torjail
ip netns exec torjail ip link set in-torjail up
ip netns exec torjail ip route add default via "$SUBNET".1

# Forward all dns traffic to tor DNSPort
iptables -t nat -A PREROUTING -i out-torjail -p udp -d "$SUBNET".1 --dport 53 -j DNAT --to-destination "$SUBNET".1:5354

# Forward all traffic to tor TransPort
iptables -t nat -A PREROUTING -i out-torjail -p tcp --syn -j DNAT --to-destination "$SUBNET".1:9040

# Accept established connection
iptables -A OUTPUT -m state -o out-torjail --state ESTABLISHED,RELATED -j ACCEPT

# Accept only forwarded traffic
iptables -A INPUT -i out-torjail -p udp --destination "$SUBNET".1 --dport 5354 -j ACCEPT
iptables -A INPUT -i out-torjail -p tcp --destination "$SUBNET".1 --dport 9040 -j ACCEPT
iptables -A INPUT -i out-torjail -p udp --destination "$SUBNET".1 --dport 9040 -j ACCEPT
iptables -A INPUT -i out-torjail -j DROP
